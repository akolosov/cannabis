<?php
/*
 * Base class; DO NOT EDIT
 *
 * auto-generated by the sfDoctrine plugin
 */
class CsProcess extends Doctrine_Record
{
  
  
  public function setTableDefinition()
  {
    $this->setTableName('cs_process');

    $this->hasColumn('parent_id', 'integer', 11, array ());
    $this->hasColumn('name', 'string', 150, array ());
    $this->hasColumn('description', 'string', 4000, array ());
    $this->hasColumn('author_id', 'integer', 11, array ());
    $this->hasColumn('version', 'float', 10, array (  'default' => 1,));
    $this->hasColumn('created_at', 'timestamp', null, array ());
    $this->hasColumn('activated_at', 'timestamp', null, array ());
    $this->hasColumn('is_active', 'boolean', null, array (  'default' => false,));
    $this->hasColumn('is_public', 'boolean', null, array (  'default' => false,));
    $this->hasColumn('is_standalone', 'boolean', null, array (  'default' => true,));
    $this->hasColumn('is_hidden', 'boolean', null, array (  'default' => false,));
    $this->hasColumn('is_system', 'boolean', null, array (  'default' => false,));
  }
  

  
  public function setUp()
  {
    $this->hasOne('CsProcess as CsProcess', array('local' => 'parent_id', 'foreign' => 'id'));
    $this->hasOne('CsAccount as CsAccount', array('local' => 'author_id', 'foreign' => 'id'));
    $this->hasMany('CsProcess as CsProcesss', array('local' => 'id', 'foreign' => 'parent_id'));
    $this->hasMany('CsProcessAction as CsProcessActions', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessInfoProperty as CsProcessInfoPropertys', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessInstance as CsProcessInstances', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessProperty as CsProcessPropertys', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessRole as CsProcessRoles', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessTransition as CsProcessTransitions', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProcessTransport as CsProcessTransports', array('local' => 'id', 'foreign' => 'process_id'));
    $this->hasMany('CsProjectProcess as CsProjectProcesss', array('local' => 'id', 'foreign' => 'process_id'));
  }
  
}
